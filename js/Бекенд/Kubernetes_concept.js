//! KUBERNETES: –®–ü–ê–†–ì–ê–õ–ö–ê –î–õ–Ø –°–û–ë–ï–°–ï–î–û–í–ê–ù–ò–Ø
// üéØ ‚Å°‚Å¢‚Å£‚Å£–û–°–ù–û–í–ù–û–ï –û–ü–†–ï–î–ï–õ–ï–ù–ò–ï‚Å°
{
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢Kubernetes (K8s) - —ç—Ç–æ open-source –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –¥–ª—è –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ, –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ.‚Å°
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ß—Ç–æ —Ç–∞–∫–æ–µ Kubernetes?"‚Å°:
	// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å°‚Å¢‚Å£‚Å°‚Å£‚Å£‚Å¢"Kubernetes - —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ, –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏. –û–Ω–∞ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å —á–µ—Ä–µ–∑ self-healing(—Å–∞–º–æ–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ‚Å°) –º–µ—Ö–∞–Ω–∏–∑–º—ã, –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º–∏ –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º —á–µ—Ä–µ–∑ YAML-–º–∞–Ω–∏—Ñ–µ—Å—Ç—ã."‚Å°
}
// üìñ ‚Å°‚Å¢‚Å£‚Å£–ò–°–¢–û–†–ò–Ø‚Å°
{
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢–°–æ–∑–¥–∞–Ω Google –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–∏—Å—Ç–µ–º—ã Borg (2014)‚Å°
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢–ü–µ—Ä–µ–¥–∞–Ω CNCF (Cloud Native Computing Foundation) –≤ 2015‚Å°
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢–°—Ç–∞–ª industry standard –¥–ª—è container orchestration‚Å°
}
// üèóÔ∏è ‚Å°‚Å¢‚Å£‚Å£–ö–õ–Æ–ß–ï–í–´–ï –ö–û–ù–¶–ï–ü–¶–ò–ò‚Å°
{
	// ‚≠ê ‚Å°‚Å¢‚Å£‚Å£–ê—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞‚Å°
	{
		// ‚Å°‚Å£‚Å¢‚Å¢Master Node‚Å° (Control Plane)
		// ‚Å°‚Å£‚Å£‚Å¢‚îú‚îÄ‚îÄ API Server‚Å°                  # —Å–≤—è–∑—É—é—â–µ–µ –∑–≤–µ–Ω–æ –º–µ–∂–¥—É –≤—Å–µ–º–∏ –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞–º–∏ Kubernetes. –û–±—ã—á–Ω–æ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è –Ω–∞ –º–∞—Å—Ç–µ—Ä-—É–∑–ª–µ (Master node).
		// ‚Å°‚Å£‚Å£‚Å¢‚îú‚îÄ‚îÄ etcd (—Ö—Ä–∞–Ω–∏–ª–∏—â–µ)‚Å°            # open-source –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–Ω–æ–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã –Ω–∞ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö —É–∑–ª–∞—Ö –≤ –≤–∏–¥–µ –∫–ª–∞—Å—Ç–µ—Ä–∞.
		// ‚Å°‚Å£‚Å£‚Å¢‚îú‚îÄ‚îÄ Scheduler‚Å°                   # –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –æ—Ç–≤–µ—á–∞—é—â–∏–π –∑–∞ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø–æ–¥–æ–≤ (Pods) –ø–æ —Ä–∞–±–æ—á–∏–º —É–∑–ª–∞–º (Nodes) –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ.
		// ‚Å°‚Å£‚Å£‚Å¢‚îú‚îÄ‚îÄ Controller Manager‚Å°          # –≠—Ç–æ –¥–µ–º–æ–Ω, –∫–æ—Ç–æ—Ä—ã–π –∑–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Ü–µ—Å—Å—ã –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤, –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ –∂–µ–ª–∞–µ–º–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–ª–∞—Å—Ç–µ—Ä–∞.
		// ‚Å°‚Å£‚Å£‚Å¢‚îî‚îÄ‚îÄ Cloud Controller Manager ‚Å°   # –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–ø—Ä–∞–≤–ª—è–µ—Ç —Ä–µ—Å—É—Ä—Å–∞–º–∏, —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–º–∏ –¥–ª—è –æ–±–ª–∞—á–Ω–æ–π –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—ã, –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ.
		// ‚Å°‚Å£‚Å¢‚Å¢Worker Nodes‚Å°(—Ä–∞–±–æ—á–∏–µ —É–∑–ª—ã ‚Äî —ç—Ç–æ –º–∞—à–∏–Ω—ã (–≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–µ –∏–ª–∏ —Ñ–∏–∑–∏—á–µ—Å–∫–∏–µ) –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ Kubernetes, –Ω–∞ –∫–æ—Ç–æ—Ä—ã—Ö –∑–∞–ø—É—Å–∫–∞—é—Ç—Å—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã (–ø–æ–¥—ã) —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏)
		// ‚Å°‚Å£‚Å£‚Å¢‚îú‚îÄ‚îÄ Kubelet‚Å°                     # –û–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ —Ç–æ, —á—Ç–æ–±—ã –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤ Pod'–∞—Ö –±—ã–ª–∏ –∑–∞–ø—É—â–µ–Ω—ã –∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–ª–∏ –≤ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã–º–∏ —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—è–º–∏ PodSpec
		// ‚Å°‚Å£‚Å£‚Å¢‚îú‚îÄ‚îÄ Kube-proxy‚Å°                  # –û–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é —Ç—Ä–∞—Ñ–∏–∫–∞ –º–µ–∂–¥—É –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞–º–∏ –∏ —É–∑–ª–∞–º–∏ –∫–ª–∞—Å—Ç–µ—Ä–∞.
		// ‚Å°‚Å£‚Å£‚Å¢‚îú‚îÄ‚îÄ Container Runtime‚Å°           # –û–Ω –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞ –∑–∞–ø—É—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ –≤ Pod'–∞—Ö
		// ‚Å°‚Å£‚Å£‚Å¢‚îî‚îÄ‚îÄ Pods‚Å°                        # —ç—Ç–æ —Å–∞–º—ã–µ –º–∞–ª–µ–Ω—å–∫–∏–µ —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–µ–º—ã–µ –≤—ã—á–∏—Å–ª–∏—Ç–µ–ª—å–Ω—ã–µ –µ–¥–∏–Ω–∏—Ü—ã –≤ Kubernetes, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –¥–ª—è —Ä–∞–∑–≤—ë—Ä—Ç—ã–≤–∞–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏.
	}
    // ‚≠ê ‚Å°‚Å¢‚Å£‚Å£–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã‚Å°
    {
		// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å°‚Å£‚Å¢‚Å¢Pod - –Ω–∞–∏–º–µ–Ω—å—à–∞—è deployable unit (Pod –º–æ–∂–µ—Ç —Å–æ–¥–µ—Ä–∂–∞—Ç—å –æ–¥–∏–Ω –∏–ª–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–¥–Ω—É —Å–µ—Ç—å –∏ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ. –ö–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã –≤–Ω—É—Ç—Ä–∏ –æ–¥–Ω–æ–≥–æ Pod –º–æ–≥—É—Ç –æ–±—â–∞—Ç—å—Å—è –¥—Ä—É–≥ —Å –¥—Ä—É–≥–æ–º —Å –ø–æ–º–æ—â—å—é localhost.)‚Å°
		{
			// yaml
			`apiVersion: v1
            kind: Pod
            metadata:
            name: my-app-pod
            spec:
            containers:
            - name: nginx
                image: nginx:1.19
                ports:
                - containerPort: 80`;
		}
		// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢Deployment - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∂–∏–∑–Ω–µ–Ω–Ω—ã–º —Ü–∏–∫–ª–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è‚Å°
		{
			// yaml
			`apiVersion: apps/v1
            kind: Deployment
            metadata:
            name: my-app
            spec:
            replicas: 3
            selector:
                matchLabels:
                app: my-app
            template:
                metadata:
                labels:
                    app: my-app
                spec:
                containers:
                - name: nginx
                    image: nginx:1.19
                    ports:
                    - containerPort: 80`;
		}
		// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å°‚Å£‚Å¢‚Å¢Service - —Å–µ—Ç–µ–≤–æ–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—é(–æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç —Å—Ç–∞–±–∏–ª—å–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ, –¥–∞–∂–µ –µ—Å–ª–∏ –ø–æ–¥—ã (Pods) –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –º–µ–Ω—è—é—Ç—Å—è.)‚Å°
		{
			`apiVersion: v1
            kind: Service
            metadata:
            name: my-service
            spec:
            selector:
                app: my-app
            ports:
                - protocol: TCP
                port: 80
                targetPort: 80
            type: LoadBalancer`;
		}
	}
}
// üéØ ‚Å°‚Å¢‚Å£‚Å£–î–õ–Ø –ß–ï–ì–û –ò–°–ü–û–õ–¨–ó–£–ï–¢–°–Ø KUBERNETES?‚Å°
{
	// ‚≠ê ‚Å°‚Å¢‚Å£‚Å£–û–°–ù–û–í–ù–´–ï USE CASES‚Å°:
	// ‚òëÔ∏è ‚Å°‚Å£‚Å£‚Å¢Auto-scaling - –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ‚Å°
	// ‚òëÔ∏è ‚Å°‚Å£‚Å£‚Å¢Self-healing - —Å–∞–º–æ–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ‚Å°
	// ‚òëÔ∏è ‚Å°‚Å£‚Å£‚Å¢Rolling updates - –±–µ—Å—à–æ–≤–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è‚Å°
	// ‚òëÔ∏è ‚Å°‚Å£‚Å£‚Å¢Service discovery - –æ–±–Ω–∞—Ä—É–∂–µ–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–æ–≤‚Å°
	// ‚òëÔ∏è ‚Å°‚Å£‚Å£‚Å¢Storage orchestration - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ–º‚Å°
	// ‚òëÔ∏è ‚Å°‚Å£‚Å£‚Å¢Secret management - —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —Å–µ–∫—Ä–µ—Ç–∞–º–∏‚Å°
}
// üîß ‚Å°‚Å¢‚Å£‚Å£–ü–†–ê–ö–¢–ò–ß–ï–°–ö–ò–ï –ü–†–ò–ú–ï–†–´‚Å°
{
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢–ë–∞–∑–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã‚Å°
	{
		// bash
		`# –ü–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–ª–∞—Å—Ç–µ—Ä–µ
        kubectl cluster-info

        # –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å nodes
        kubectl get nodes

        # –°–æ–∑–¥–∞—Ç—å deployment
        kubectl create deployment nginx --image=nginx:1.19

        # –ú–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å deployment
        kubectl scale deployment nginx --replicas=3

        # –ü—Ä–∏–º–µ–Ω–∏—Ç—å –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –∏–∑ —Ñ–∞–π–ª–∞
        kubectl apply -f deployment.yaml

        # –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å pods
        kubectl get pods

        # –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å –ª–æ–≥–∏ pod
        kubectl logs <pod-name>

        # –í—ã–ø–æ–ª–Ω–∏—Ç—å –∫–æ–º–∞–Ω–¥—É –≤ pod
        kubectl exec -it <pod-name> -- /bin/bash

        # –£–¥–∞–ª–∏—Ç—å —Ä–µ—Å—É—Ä—Å
        kubectl delete -f deployment.yaml`;
	}
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢ConfigMap –∏ Secrets‚Å°
	{
		// yaml
		`# ConfigMap
        apiVersion: v1
        kind: ConfigMap
        metadata:
        name: app-config
        data:
        database.url: "postgresql://localhost:5432"
        log.level: "INFO"

        # Secret
        apiVersion: v1
        kind: Secret
        metadata:
        name: app-secret
        type: Opaque
        data:
        password: <base64-encoded-password>`;
	}
    // ‚≠ê ‚Å°‚Å£‚Å£‚Å¢Horizontal Pod Autoscaler‚Å°
    {
		// yaml
		`apiVersion: autoscaling/v2
        kind: HorizontalPodAutoscaler
        metadata:
        name: my-app-hpa
        spec:
        scaleTargetRef:
            apiVersion: apps/v1
            kind: Deployment
            name: my-app
        minReplicas: 2
        maxReplicas: 10
        metrics:
        - type: Resource
            resource:
            name: cpu
            target:
                type: Utilization
                averageUtilization: 50`;
	}
}
// üõ†Ô∏è ‚Å°‚Å¢‚Å£‚Å£–ü–†–û–î–í–ò–ù–£–¢–´–ï –ö–û–ù–¶–ï–ü–¶–ò–ò‚Å°
{
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å°‚Å£‚Å£‚Å¢Ingress (—É–ø—Ä–∞–≤–ª—è–µ—Ç –≤–Ω–µ—à–Ω–∏–º –¥–æ—Å—Ç—É–ø–æ–º –∫ —Å–µ—Ä–≤–∏—Å–∞–º –≤ –∫–ª–∞—Å—Ç–µ—Ä–µ, –æ–±—ã—á–Ω–æ —á–µ—Ä–µ–∑ HTTP –∏ HTTPS.)‚Å°
	{
		// yaml
		`apiVersion: networking.k8s.io/v1
        kind: Ingress
        metadata:
        name: my-app-ingress
        annotations:
            nginx.ingress.kubernetes.io/rewrite-target: /
        spec:
        rules:
        - host: myapp.example.com
            http:
            paths:
            - path: /
                pathType: Prefix
                backend:
                service:
                    name: my-service
                    port:
                    number: 80`;
	}
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å°‚Å£‚Å£‚Å¢Persistent Volumes (–±–ª–æ–∫–∏ —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ —ç–∫–æ—Å–∏—Å—Ç–µ–º–µ Kubernetes, –∫–æ—Ç–æ—Ä—ã–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª—è—é—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –≤ –ø–æ–¥–∞—Ö –∏ —Å–æ—Ö—Ä–∞–Ω—è—é—Ç –∏—Ö –Ω–µ–∑–∞–≤–∏—Å–∏–º–æ –æ—Ç –∂–∏–∑–Ω–µ–Ω–Ω–æ–≥–æ —Ü–∏–∫–ª–∞ –æ—Ç–¥–µ–ª—å–Ω—ã—Ö –ø–æ–¥–æ–≤)‚Å°
	{
		// yaml
		`apiVersion: v1
        kind: PersistentVolumeClaim
        metadata:
        name: my-pvc
        spec:
        accessModes:
            - ReadWriteOnce
        resources:
            requests:
            storage: 10Gi`;
	}
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å°‚Å£‚Å£‚Å¢Namespaces (–ü—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–∞ –∏–º—ë–Ω –ø–æ–º–æ–≥–∞—é—Ç –æ—Ä–≥–∞–Ω–∏–∑–æ–≤—ã–≤–∞—Ç—å, –∫–æ–Ω—Ç—Ä–æ–ª–∏—Ä–æ–≤–∞—Ç—å –¥–æ—Å—Ç—É–ø –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —Ä–µ—Å—É—Ä—Å–∞–º–∏, –æ—Å–æ–±–µ–Ω–Ω–æ –≤ —Å–∏—Ç—É–∞—Ü–∏—è—Ö, –∫–æ–≥–¥–∞ –º–Ω–æ–≥–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –∏–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏—Å–ø–æ–ª—å–∑—É—é—Ç –æ–¥–Ω—É –∏ —Ç—É –∂–µ –∏–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä—É.)‚Å°
	{
		// bash
		`# –°–æ–∑–¥–∞—Ç—å namespace
        kubectl create namespace production

        # –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Ä–µ—Å—É—Ä—Å—ã –≤ namespace
        kubectl get pods -n production`;
	}
}
// üí° ‚Å°‚Å¢‚Å£‚Å£–õ–£–ß–®–ò–ï –ü–†–ê–ö–¢–ò–ö–ò‚Å°
{
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢Security‚Å°:
	{
		// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢RBAC - –Ω–∞—Å—Ç—Ä–æ–π–∫–∞ –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø–∞‚Å°
		// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢Security Contexts - –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø—Ä–∞–≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤‚Å°
		// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢Network Policies - –∏–∑–æ–ª—è—Ü–∏—è —Ç—Ä–∞—Ñ–∏–∫–∞‚Å°
		// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢Pod Security Standards - —Å—Ç–∞–Ω–¥–∞—Ä—Ç—ã –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏‚Å°
	}
    // ‚≠ê ‚Å°‚Å£‚Å£‚Å¢Reliability‚Å°:
    {
		// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢Readiness/Liveness probes‚Å°
		{
			// yaml
			`livenessProbe:
            httpGet:
                path: /health
                port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10

            readinessProbe:
            httpGet:
                path: /ready
                port: 8080
            initialDelaySeconds: 5
            periodSeconds: 5`;
		}
        // ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢Resource limits‚Å°
        {
            // yaml
            `resources:
            requests:
                memory: "64Mi"
                cpu: "250m"
            limits:
                memory: "128Mi"
                cpu: "500m"`;
        }
		// ‚òëÔ∏è
	}
	// ‚≠ê
}
// üöÄ ‚Å°‚Å¢‚Å£‚Å£–ß–¢–û –ì–û–í–û–†–ò–¢–¨ –ù–ê –°–û–ë–ï–°–ï–î–û–í–ê–ù–ò–ò‚Å°
{
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢–ö–ª—é—á–µ–≤—ã–µ —Ç–µ–∑–∏—Å—ã‚Å°:
	// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢"Kubernetes –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç declarative configuration"‚Å°
	// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢"–ü–æ–∑–≤–æ–ª—è–µ—Ç —É–ø—Ä–∞–≤–ª—è—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ –∫–∞–∫ cattle, –Ω–µ pets"‚Å°
	// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢"–û–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç high availability –∏ fault tolerance"‚Å°
	// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢"–ò–Ω—Ç–µ–≥—Ä–∏—Ä—É–µ—Ç—Å—è —Å CI/CD pipelines"‚Å°
	// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å¢"–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç multi-cloud —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏"‚Å°
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢–ü—Ä–∏–º–µ—Ä –æ—Ç–≤–µ—Ç–∞ –Ω–∞ –≤–æ–ø—Ä–æ—Å "–ß—Ç–æ —Ç–∞–∫–æ–µ Kubernetes?"‚Å°:
	// ‚òëÔ∏è ‚Å°‚Å£‚Å¢‚Å°‚Å¢‚Å£‚Å£"Kubernetes - —ç—Ç–æ —Å–∏—Å—Ç–µ–º–∞ –æ—Ä–∫–µ—Å—Ç—Ä–∞—Ü–∏–∏ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∏—Ä—É–µ—Ç —Ä–∞–∑–≤–µ—Ä—Ç—ã–≤–∞–Ω–∏–µ, –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–º–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏. –û–Ω–∞ –æ–±–µ—Å–ø–µ—á–∏–≤–∞–µ—Ç –æ—Ç–∫–∞–∑–æ—É—Å—Ç–æ–π—á–∏–≤–æ—Å—Ç—å —á–µ—Ä–µ–∑ self-healing –º–µ—Ö–∞–Ω–∏–∑–º—ã, –ø–æ–∑–≤–æ–ª—è–µ—Ç –ª–µ–≥–∫–æ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞—Ç—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å –∏–º–∏ –¥–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω—ã–º —Å–ø–æ—Å–æ–±–æ–º —á–µ—Ä–µ–∑ YAML-–º–∞–Ω–∏—Ñ–µ—Å—Ç—ã."‚Å°
}
// üìö ‚Å°‚Å¢‚Å£‚Å£–î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –¢–ï–•–ù–û–õ–û–ì–ò–ò –í –≠–ö–û–°–ò–°–¢–ï–ú–ï KUBERNETES‚Å°
{
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢Helm - package manager‚Å°
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢Prometheus - –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥‚Å°
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢Fluentd - –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ‚Å°
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢Istio - service mesh‚Å°
	// ‚≠ê ‚Å°‚Å£‚Å£‚Å¢ArgoCD - GitOps‚Å°
}