
//! ‚Å°‚Å¢‚Å£‚Å¢–†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –†–ê–ó–ù–´–• –ó–ê–î–ê–ß‚Å°
// ‚Å°‚Å£‚Å°‚Å£‚Å£‚Å°‚Å¢‚Å£‚Å£–û–ë–™–ï–ö–¢–´ –ò –ú–ê–°–°–ò–í–´‚Å°
{
	// ‚Å°‚Å£‚Å£‚Å¢–ü—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –∫–ª—é—á–∞–º –æ–±—ä–µ–∫—Ç—ã‚Å°
	{
		const a = { a: "a" };
		const b = { b: "b" };
		const c = {};
		c[a] = a; // –∫–ª—é—á–æ–º —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è —Å—Ç—Ä–æ–∫–∞ "[object Object]"
		c[b] = b; // —Ç–æ—Ç –∂–µ –∫–ª—é—á "[object Object]", –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ b
		// ‚Å°‚Å¢‚Å¢‚Å¢–ü–æ—á–µ–º—É —Ç–∞–∫ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç?‚Å°
		// ‚Å°‚Å¢‚Å¢‚Å¢1. –ö–ª—é—á–∏ –æ–±—ä–µ–∫—Ç–∞ –≤ JavaScript –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –∫ —Å—Ç—Ä–æ–∫–∞–º. –ö–æ–≥–¥–∞ –≤—ã –ø—ã—Ç–∞–µ—Ç–µ—Å—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ–±—ä–µ–∫—Ç (a –∏–ª–∏ b) –∫–∞–∫ –∫–ª—é—á, JavaScript –≤—ã–∑—ã–≤–∞–µ—Ç –µ–≥–æ –º–µ—Ç–æ–¥ toString(), –∫–æ—Ç–æ—Ä—ã–π –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É "[object Object]".‚Å°
		// ‚Å°‚Å¢‚Å¢‚Å¢2. –ü–æ—Å–∫–æ–ª—å–∫—É –æ–±–∞ –∫–ª—é—á–∞ –ø—Ä–∏–≤–æ–¥—è—Ç—Å—è –∫ –æ–¥–Ω–æ–π –∏ —Ç–æ–π –∂–µ —Å—Ç—Ä–æ–∫–µ, –æ–Ω–∏ –∫–æ–Ω—Ñ–ª–∏–∫—Ç—É—é—Ç, –∏ –ø–æ—Å–ª–µ–¥–Ω–µ–µ –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç –ø—Ä–µ–¥—ã–¥—É—â–µ–µ.‚Å°
		// ‚Å°‚Å¢‚Å¢‚Å¢3. –ó–Ω–∞—á–µ–Ω–∏–µ –≤ –æ–±—ä–µ–∫—Ç–µ c –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç—Å—è‚Å°
        // ‚Å°‚Å£‚Å£‚Å°‚Å¢‚Å¢‚Å¢-- –°–Ω–∞—á–∞–ª–∞ c[a] = a –∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç a –ø–æ –∫–ª—é—á—É "[object Object]"‚Å°
        // ‚Å°‚Å£‚Å£‚Å°‚Å¢‚Å¢‚Å¢-- –ó–∞—Ç–µ–º c[b] = b –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ –Ω–∞ b.‚Å°
		// ‚Å°‚Å£‚Å£‚Å°‚Å¢‚Å¢‚Å¢4. –ß—Ç–æ –≤—ã–≤–æ–¥–∏—Ç console.log‚Å°
		// ‚Å°‚Å¢‚Å¢‚Å¢-- c[a] ‚Üí —ç—Ç–æ c["[object Object]"] ‚Üí { b: "b" }‚Å°
		// ‚Å°‚Å£‚Å£‚Å°‚Å¢‚Å¢‚Å¢- c[a].a ‚Üí { b: "b" }.a ‚Üí undefined (—Å–≤–æ–π—Å—Ç–≤–∞ a –Ω–µ—Ç)‚Å°
		// ‚Å°‚Å¢‚Å¢‚Å¢-- c[b] ‚Üí —ç—Ç–æ —Ç–æ–∂–µ c["[object Object]"] ‚Üí { b: "b" }‚Å°
		// ‚Å°‚Å¢‚Å¢‚Å¢- c[b].b ‚Üí { b: "b" }.b ‚Üí "b"‚Å°
		console.log(c[a].a, c[b].b); // undefined "b"
	}
	// ‚Å°‚Å£‚Å£‚Å¢–§—É–Ω–∫—Ü–∏—è –≥–ª—É–±–æ–∫–æ–≥–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è‚Å°
	{
		/**
		 * –ì–ª—É–±–æ–∫–æ–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–∞/–º–∞—Å—Å–∏–≤–∞/–∑–Ω–∞—á–µ–Ω–∏—è
		 * @param {*} source - –æ–±—ä–µ–∫—Ç, –º–∞—Å—Å–∏–≤ –∏–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ –¥–ª—è –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
		 * @returns {*} –≥–ª—É–±–æ–∫—É—é –∫–æ–ø–∏—é –∏—Å—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö
		 */
		// –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ (—Å—Ä–µ–¥–Ω—è—è –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å)
		function deepClone(source) {
			// 1. –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–º–∏—Ç–∏–≤–æ–≤ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
			if (source === null || typeof source !== "object") {
				return source; // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –ø—Ä–∏–º–∏—Ç–∏–≤—ã (number, string, boolean, null, undefined, symbol) –∏ —Ñ—É–Ω–∫—Ü–∏–∏ –∫–∞–∫ –µ—Å—Ç—å
			}
			// 2. –û–±—Ä–∞–±–æ—Ç–∫–∞ Date
			if (source instanceof Date) {
				return new Date(source.getTime()); // –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç Date —Å —Ç–µ–º –∂–µ –≤—Ä–µ–º–µ–Ω–µ–º
			}
			// 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ Array
			if (Array.isArray(source)) {
				const clone = [];
				for (const item of source) {
					clone.push(deepClone(item)); // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–ª–æ–Ω–∏—Ä—É–µ–º –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞
				}
				return clone;
			}
			// 4. –û–±—Ä–∞–±–æ—Ç–∫–∞ Set
			if (source instanceof Set) {
				const clone = new Set();
				source.forEach((value) => {
					clone.add(deepClone(value)); // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–ª–æ–Ω–∏—Ä—É–µ–º –∑–Ω–∞—á–µ–Ω–∏—è Set
				});
				return clone;
			}
			// 5. –û–±—Ä–∞–±–æ—Ç–∫–∞ Map
			if (source instanceof Map) {
				const clone = new Map();
				source.forEach((value, key) => {
					clone.set(deepClone(key), deepClone(value)); // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ –∫–ª–æ–Ω–∏—Ä—É–µ–º –∫–ª—é—á–∏ –∏ –∑–Ω–∞—á–µ–Ω–∏—è Map
				});
				return clone;
			}
			// 6. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ã—á–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (–≤–∫–ª—é—á–∞—è –∫–ª–∞—Å—Å—ã)
			if (source instanceof Object) {
				const clone = Object.create(Object.getPrototypeOf(source)); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –ø—Ä–æ—Ç–æ—Ç–∏–ø
				// –ö–æ–ø–∏—Ä—É–µ–º –≤—Å–µ —Å–≤–æ–π—Å—Ç–≤–∞, –≤–∫–ª—é—á–∞—è —Å–∏–º–≤–æ–ª—ã
				const allProperties = [
					...Object.getOwnPropertyNames(source),
					...Object.getOwnPropertySymbols(source),
				];
				for (const key of allProperties) {
					// –î–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä —Å–æ–¥–µ—Ä–∂–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Å–≤–æ–π—Å—Ç–≤–µ (value, get/set, enumerable –∏ —Ç.–¥.)
					const descriptor = Object.getOwnPropertyDescriptor(source, key);

					if (descriptor.value) {
						descriptor.value = deepClone(descriptor.value); // –†–µ–∫—É—Ä—Å–∏–≤–Ω–æ–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
					}

					Object.defineProperty(clone, key, descriptor); // –ö–æ–ø–∏—Ä—É–µ–º —Å–≤–æ–π—Å—Ç–≤–æ —Å –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–º
				}

				return clone;
			}
			// 7. –î–ª—è –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã—Ö —Ç–∏–ø–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, WeakMap, WeakSet) –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª
			return source;
		}
		// –†–µ–∞–ª–∏–∑–∞—Ü–∏—è –≥–ª—É–±–æ–∫–æ–≥–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º —Å—Ç–µ–∫–∞
		/**
		 * –ì–ª—É–±–æ–∫–æ–µ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ —á–µ—Ä–µ–∑ –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ (—Å—Ç–µ–∫)
		 * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –æ–±—ä–µ–∫—Ç—ã, –º–∞—Å—Å–∏–≤—ã, Set, Map, Date
		 * –ò—Å–∫–ª—é—á–∞–µ—Ç —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏–µ —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ WeakMap
		 * @param {*} source - –∏—Å—Ö–æ–¥–Ω—ã–π –æ–±—ä–µ–∫—Ç
		 * @returns {*} –≥–ª—É–±–æ–∫–∞—è –∫–æ–ø–∏—è
		 */
		function deepCloneStack(source) {
			// –•—Ä–∞–Ω–∏–ª–∏—â–µ –¥–ª—è –∫–ª–æ–Ω–æ–≤ (–¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ü–∏–∫–ª–∏—á–µ—Å–∫–∏—Ö —Å—Å—ã–ª–æ–∫)
			const clones = new WeakMap();
			// –°—Ç–µ–∫ –¥–ª—è –∏—Ç–µ—Ä–∞—Ç–∏–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏: [–æ—Ä–∏–≥–∏–Ω–∞–ª, –∫–ª–æ–Ω, —Ä–æ–¥–∏—Ç–µ–ª—å, –∫–ª—é—á]
			const stack = [];
			// –ë–∞–∑–æ–≤—ã–π –∫–ª–æ–Ω (–¥–ª—è –Ω–∞—á–∞–ª—å–Ω–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞)
			let rootClone;
			// –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø—Ä–∏–º–∏—Ç–∏–≤–æ–≤ –∏ —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤
			if (source === null || typeof source !== "object") {
				return source;
			}
			// –°–æ–∑–¥–∞–µ–º –Ω–∞—á–∞–ª—å–Ω—ã–π –∫–ª–æ–Ω –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ç–∏–ø–∞
			if (source instanceof Date) {
				return new Date(source);
			}
			if (source instanceof Set) {
				rootClone = new Set();
			} else if (source instanceof Map) {
				rootClone = new Map();
			} else if (Array.isArray(source)) {
				rootClone = [];
			} else {
				rootClone = Object.create(Object.getPrototypeOf(source));
			}
			// –î–æ–±–∞–≤–ª—è–µ–º –≤ —Å—Ç–µ–∫ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –¥–æ—á–µ—Ä–Ω–∏—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
			stack.push([source, rootClone]);
			clones.set(source, rootClone);
			// –û–±—Ä–∞–±–æ—Ç–∫–∞ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å—Ç–µ–∫–∞
			while (stack.length > 0) {
				const [original, clone] = stack.pop();
				// –û–±—Ä–∞–±–æ—Ç–∫–∞ Set
				if (original instanceof Set) {
					original.forEach((value) => {
						const valueClone = clones.get(value) || getBaseClone(value);
						if (valueClone !== value) {
							stack.push([value, valueClone]);
							clones.set(value, valueClone);
						}
						clone.add(valueClone);
					});
					continue;
				}
				// –û–±—Ä–∞–±–æ—Ç–∫–∞ Map
				if (original instanceof Map) {
					original.forEach((value, key) => {
						const keyClone = clones.get(key) || getBaseClone(key);
						const valueClone = clones.get(value) || getBaseClone(value);
						if (keyClone !== key) {
							stack.push([key, keyClone]);
							clones.set(key, keyClone);
						}
						if (valueClone !== value) {
							stack.push([value, valueClone]);
							clones.set(value, valueClone);
						}
						clone.set(keyClone, valueClone);
					});
					continue;
				}
				// –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—ä–µ–∫—Ç–æ–≤ –∏ –º–∞—Å—Å–∏–≤–æ–≤
				const keys = [
					...Object.getOwnPropertyNames(original),
					...Object.getOwnPropertySymbols(original),
				];
				for (const key of keys) {
					const descriptor = Object.getOwnPropertyDescriptor(original, key);
					let value = original[key];
					// –ö–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è
					let valueClone;
					if (clones.has(value)) {
						valueClone = clones.get(value);
					} else {
						valueClone = getBaseClone(value);
						if (valueClone !== value) {
							stack.push([value, valueClone]);
							clones.set(value, valueClone);
						}
					}
					// –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–≤–æ–π—Å—Ç–≤–∞ —Å –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–º
					const newDescriptor = { ...descriptor };
					if ("value" in newDescriptor) {
						newDescriptor.value = valueClone;
					}
					Object.defineProperty(clone, key, newDescriptor);
				}
			}
			return rootClone;
		}
		// –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –±–∞–∑–æ–≤–æ–≥–æ –∫–ª–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è
		function getBaseClone(value) {
			if (value === null || typeof value !== "object") {
				return value;
			}
			if (value instanceof Date) {
				return new Date(value);
			}
			if (value instanceof Set) {
				return new Set();
			}
			if (value instanceof Map) {
				return new Map();
			}
			if (Array.isArray(value)) {
				return [];
			}
			return Object.create(Object.getPrototypeOf(value));
		}
	}
}
// ‚Å°‚Å¢‚Å£‚Å£–û–°–û–ë–ï–ù–ù–û–°–¢–ò –ò–ù–¢–ï–†–ü–†–ï–¢–ê–¢–û–†–ê‚Å°
{
	function first() {
		return {
			name: "–ò–º—è",
		};
	}
	function second() {
		return; // üëà –ó–¥–µ—Å—å –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä –ø–æ—Å—Ç–∞–≤–∏—Ç —Ç–æ—á–∫—É —Å –∑–∞–ø—è—Ç–æ–π
		{
			name: "–ò–º—è";
		}
	}
	// console.log(first()); // {name: '–ò–º—è'}
	// console.log(second()); // undefined
}
// ‚Å°‚Å¢‚Å£‚Å£–û–ë–õ–ê–°–¢–ò –í–ò–î–ò–ú–û–°–¢–ò‚Å°
{
	var a = 5;
	var writea = function () {
		console.log(a); // üëà –ù–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∏ –≤ –æ–¥–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ –≤–∏–¥–∏–º–æ—Å—Ç–∏
		var a = 10;
	};
	// writea() // undefined –Ω–∏ —á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç
	// –í–∏–¥–∏—Ç –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ç–æ—Ä
	var a = 5; // –ì–ª–æ–±–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è
	var writea = function () {
		// –í—Å–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è var "–ø–æ–¥–Ω–∏–º–∞—é—Ç—Å—è" –≤ –Ω–∞—á–∞–ª–æ —Ñ—É–Ω–∫—Ü–∏–∏
		var a; // –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ–¥–Ω—è—Ç–æ, –Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–∫–∞ undefined
		var b; // –û–±—ä—è–≤–ª–µ–Ω–∏–µ –ø–æ–¥–Ω—è—Ç–æ, –Ω–æ –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ–∫–∞ undefined

		b = a; // –ó–¥–µ—Å—å `a` –µ—â—ë undefined (–ª–æ–∫–∞–ª—å–Ω–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è)
		console.log(b); // –í—ã–≤–µ–¥–µ—Ç undefined
		a = 10; // –¢–µ–ø–µ—Ä—å –ª–æ–∫–∞–ª—å–Ω–∞—è `a` = 10 (–Ω–æ —ç—Ç–æ —É–∂–µ –ø–æ—Å–ª–µ console.log)
	};
}
// ‚Å°‚Å¢‚Å£‚Å£THIS –ö–û–ù–¢–ï–ö–°–¢‚Å°
{
	// ‚Å°‚Å£‚Å£‚Å°‚Å£‚Å£‚Å°‚Å£‚Å£‚Å¢–†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º this —Ñ—É–Ω–∫—Ü–∏—è‚Å°
	{
		function foo() {
			const x = 10;
			return {
				x: 20,
				bar() {
					console.log(this.x); // 20 C—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª –º–µ—Ç–æ–¥ bar
				},
				baz: () => {
					console.log(this.x); // –°—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç –∏–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–Ω—Ç–µ–∫—Å—Ç (–≤ –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ, —ç—Ç–æ foo) –∑–Ω–∞—á–∏—Ç undefined
				},
			};
		}
		const obj1 = foo();
		obj1.bar(); // ! 20 C—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª –º–µ—Ç–æ–¥ bar
		obj1.baz(); // ! undefined –°—Å—ã–ª–∞—Ç—å—Å—è –Ω–µ –Ω–∞ —á—Ç–æ –∑–Ω–∞—á–∏—Ç undefined
		const obj2 = foo.call({ x: 30 }); // –ù–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è this
		let y = obj2.bar;
		let x = obj2.baz;
		y(); // ! undefined –ü–æ—Ç–µ—Ä—è–Ω –æ–±—ä–µ–∫—Ç –¥–ª—è —Å—Å—ã–ª–∫–∏ —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é y
		x(); // ! 30 –ù–æ–≤—ã–π –æ–±—ä–µ–∫—Ç –¥–ª—è —Å—Å—ã–ª–∫–∏
		obj2.bar(); // ! 20  –°—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –≤—ã–∑–≤–∞–ª –º–µ—Ç–æ–¥ bar
		obj2.baz(); // ! 30 –°—Å—ã–ª–∞–µ—Ç—Å—è –Ω–∞ –Ω–æ–≤—ã–π –æ–±—ä–µ–∫—Ç
    }
    // ‚Å°‚Å£‚Å£‚Å¢–†–∞–±–æ—Ç–∞ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º this —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç‚Å°
    {
        function Cat() {
            this.name = "–ö–æ—Ç";
            this.getNameArrow = () => {
                console.log(this.name);
            }
            this.getName = function() {
                console.log(this.name);
            }
        }
        const cat = new Cat();
        cat.getNameArrow(); // ! –ö–æ—Ç –∏–∑ –∑–∞–º—ã–∫–∞–Ω–∏—è(–Ω–∞—à—ë–ª this –≤ –º–æ–º–µ–Ω—Ç —Å–æ–∑–¥–∞–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ –≤—ã—à–µ)
        cat.getName(); // ! –ö–æ—Ç –≤–∑—è–ª this –∏–∑ –æ–±—ä–µ–∫—Ç–∞ cat
        const { getNameArrow, getName } = cat; // ! –¥–µ—Å—Ç—Ä—É–∫—Ç—É—Ä–∏–∑–∞—Ü–∏—è –æ–±—ä–µ–∫—Ç–∞ cat –ø–æ—Ç–µ—Ä—è –º–µ—Ç–æ–¥–∞–º–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç
        getName(); // ! –ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ (–≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ –±–µ–∑ –æ–±—ä–µ–∫—Ç–∞ cat)
        getNameArrow(); // ! –ö–æ—Ç (–≤—ã–∑–æ–≤ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –æ–±—ä–µ–∫—Ç–æ–º cat, —Ç–∞–∫ –∫–∞–∫ —Å—Ç—Ä–µ–ª–æ—á–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –Ω–µ —Ç–µ—Ä—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç)
    }
}
// ‚Å°‚Å¢‚Å£‚Å£–¶–ò–ö–õ–´, map()‚Å°
{
	// ‚Å°‚Å£‚Å£‚Å¢–°–æ–±—Å—Ç–≤–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è map(–ø—Ä–æ—Å—Ç–æ–µ)_‚Å°
	{
		function myMap(array, callback) {
			const result = [];
			for (let i = 0; i < array.length; i++) {
				result.push(callback(array[i], i, array));
			}
			return result;
		}
		// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
		const numbers = [1, 2, 3];
		const squared = myMap(numbers, (num) => num * num);
		console.log(squared); // [1, 4, 9]
	}
	// ‚Å°‚Å£‚Å£‚Å¢–†–µ–∞–ª–∏–∑–∞—Ü–∏—è map() –∫–∞–∫ –º–µ—Ç–æ–¥–∞ –ø—Ä–æ—Ç–æ—Ç–∏–ø–∞ Array‚Å°
	{
		Array.prototype.myMap = function (callback) {
			const result = [];
			for (let i = 0; i < this.length; i++) {
				result.push(callback(this[i], i, this));
			}
			return result;
		};

		// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è
		const words = ["hello", "world"];
		const lengths = words.myMap((word) => word.length);
		console.log(lengths); // [5, 5]
	}
	//	‚Å°‚Å£‚Å°‚Å£‚Å£‚Å°‚Å£‚Å£‚Å¢–£–ª—É—á—à–µ–Ω–Ω–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è map() —Å –ø—Ä–æ–≤–µ—Ä–∫–∞–º–∏‚Å°
	{
		function myMap(array, callback, thisArg) {
			// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ array —è–≤–ª—è–µ—Ç—Å—è –∏—Ç–µ—Ä–∏—Ä—É–µ–º—ã–º –æ–±—ä–µ–∫—Ç–æ–º
			if (array == null) {
				throw new TypeError("Array is null or undefined");
			}

			// –ü—Ä–æ–≤–µ—Ä–∫–∞, —á—Ç–æ callback —è–≤–ª—è–µ—Ç—Å—è —Ñ—É–Ω–∫—Ü–∏–µ–π
			if (typeof callback !== "function") {
				throw new TypeError(callback + " is not a function");
			}

			const result = [];
			let i = 0;
			const len = array.length;

			// –û–±—Ä–∞–±–æ—Ç–∫–∞ this –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
			const boundCallback = thisArg ? callback.bind(thisArg) : callback;

			while (i < len) {
				if (i in array) {
					result[i] = boundCallback(array[i], i, array);
				}
				i++;
			}
			return result;
		}

		// –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
		const obj = {
			multiplier: 2,
			calculate: function (num) {
				return num * this.multiplier;
			},
		};

		const nums = [1, 2, 3];
		const result = myMap(nums, obj.calculate, obj);
		console.log(result); // [2, 4, 6]
	}
	// ‚Å°‚Å£‚Å£‚Å¢–¶–∏–∫–ª —Å setTimeout‚Å°
	{
		// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è i, –æ–±—ä—è–≤–ª–µ–Ω–Ω–∞—è —á–µ—Ä–µ–∑ var, –∏–º–µ–µ—Ç —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—É—é –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏ (–Ω–µ –±–ª–æ—á–Ω—É—é). –≠—Ç–æ –∑–Ω–∞—á–∏—Ç, —á—Ç–æ –≤—Å–µ –∏—Ç–µ—Ä–∞—Ü–∏–∏ —Ü–∏–∫–ª–∞ —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ –æ–¥–Ω—É –∏ —Ç—É –∂–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é i. –ö –º–æ–º–µ–Ω—Ç—É –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–ª–±—ç–∫–∞ setTimeout —Ü–∏–∫–ª —É–∂–µ –∑–∞–≤–µ—Ä—à–∏—Ç—Å—è, –∏ i –±—É–¥–µ—Ç —Ä–∞–≤–Ω–∞ 6 (—É—Å–ª–æ–≤–∏–µ i <= 5 —Å—Ç–∞–Ω–µ—Ç –ª–æ–∂–Ω—ã–º).
		// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å let –≤–º–µ—Å—Ç–æ var. let —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é i –¥–ª—è –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ (–±–ª–æ—á–Ω–∞—è –æ–±–ª–∞—Å—Ç—å –≤–∏–¥–∏–º–æ—Å—Ç–∏). –ö–∞–∂–¥—ã–π setTimeout –∑–∞—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç —Å–≤–æ—é –ª–æ–∫–∞–ª—å–Ω—É—é i.
		// –ó–∞–º—ã–∫–∞–Ω–∏–µ (IIFE)
		// for (var i = 0; i <= 5; i++) {
		// (function (currentI) {
		// 	setTimeout(function () {
		// 	console.log(currentI); // 0, 1, 2, 3, 4, 5
		// 	}, currentI * 600);
		// })(i);
		// }
		// –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è currentI —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –∑–Ω–∞—á–µ–Ω–∏–µ i –¥–ª—è –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏ –≤–Ω—É—Ç—Ä–∏ –∑–∞–º—ã–∫–∞–Ω–∏—è.
		for (var i = 0; i <= 5; i++) {
			setTimeout(function () {
				console.log(i);
			}, i * 600);
		}
		// 6 * 6
		// 0 1 2 3 4 5
	}
}
// ‚Å°‚Å¢‚Å£‚Å£–ö–õ–ê–°–°–´‚Å°
{
	//* –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å stack, —É –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—Å–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç –∑–∞ –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω–æ–µ –≤—Ä–µ–º—è
    //* O(1)
    {
		class MinStack {
			constructor() {
				this.stack = []; // –û—Å–Ω–æ–≤–Ω–æ–π —Å—Ç–µ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
				this.minStack = []; // –°—Ç–µ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–∏—Ö –º–∏–Ω–∏–º—É–º–æ–≤
			}
			push(value) {
				this.stack.push(value);

				// –ï—Å–ª–∏ minStack –ø—É—Å—Ç –∏–ª–∏ –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–µ–Ω—å—à–µ —Ç–µ–∫—É—â–µ–≥–æ –º–∏–Ω–∏–º—É–º–∞
				if (this.minStack.length === 0 || value < this.minStack[this.minStack.length - 1]) {
					this.minStack.push(value);
				} else {
					// –ü–æ–≤—Ç–æ—Ä—è–µ–º —Ç–µ–∫—É—â–∏–π –º–∏–Ω–∏–º—É–º
					this.minStack.push(this.minStack[this.minStack.length - 1]);
				}
			}
			pop() {
				if (this.stack.length === 0) return undefined;
				this.minStack.pop();
				return this.stack.pop();
			}
			getMin() {
				if (this.minStack.length === 0) return undefined;
				return this.minStack[this.minStack.length - 1];
			}
		}

		const ms = new MinStack();

		// case 1
		ms.push(1);
		ms.push(0);
		ms.push(3);
		ms.pop(); // 1
		ms.getMin(); // 0
		ms.pop(); // 0
		ms.getMin(); // 1

		// case 2
		ms.push(-1);
		ms.push(-2);
		ms.push(0);

		// case 3
		ms.push(1);
		ms.push(0);
		ms.push(0);
		ms.push(0);
		ms.push(3);
		ms.pop(); // 3

		console.log(ms.getMin()); // 0
	}
}
// ‚Å°‚Å£‚Å°‚Å£‚Å£‚Å°‚Å¢‚Å£‚Å£–†–ï–ê–õ–ò–ó–ê–¶–ò–Ø –°–í–û–ï–ô JQUERY –ë–ò–ë–õ–ò–û–¢–ï–ö–ò‚Å°
{
    function SimpleJQ(selector) {
		// –ù–∞—Ö–æ–¥–∏–º —ç–ª–µ–º–µ–Ω—Ç—ã DOM
		const elements = document.querySelectorAll(selector);

		// –í–æ–∑–≤—Ä–∞—â–∞–µ–º –æ–±—ä–µ–∫—Ç —Å –º–µ—Ç–æ–¥–∞–º–∏ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
		return {
			// –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å CSS —Å—Ç–∏–ª—è–º–∏
			css: function (property, value) {
				// –ï—Å–ª–∏ –ø–µ—Ä–µ–¥–∞–ª–∏ –æ–±—ä–µ–∫—Ç —Å–≤–æ–π—Å—Ç–≤
				if (typeof property === "object") {
					Object.entries(property).forEach(([key, val]) => {
						elements.forEach((el) => (el.style[key] = val));
					});
					return this;
				}

				// –ï—Å–ª–∏ –ø–æ–ª—É—á–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
				if (value === undefined) {
					return elements[0] ? elements[0].style[property] : null;
				}

				// –ï—Å–ª–∏ —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ
				elements.forEach((el) => (el.style[property] = value));
				return this;
			},

			// –ú–µ—Ç–æ–¥ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTML —Å–æ–¥–µ—Ä–∂–∏–º—ã–º
			html: function (content) {
				if (content === undefined) {
					return elements[0] ? elements[0].innerHTML : null;
				}
				elements.forEach((el) => (el.innerHTML = content));
				return this;
			},

			// –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π
			on: function (event, callback) {
				elements.forEach((el) => el.addEventListener(event, callback));
				return this;
			},

			// –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤
			addClass: function (className) {
				elements.forEach((el) => el.classList.add(className));
				return this;
			},

			// –ú–µ—Ç–æ–¥ –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è/—É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤
			toggle: function (className) {
				elements.forEach((el) => el.classList.toggle(className));
				return this;
			},

			// –ú–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤
			removeClass: function (className) {
				elements.forEach((el) => el.classList.remove(className));
				return this;
			},
		};
	}

	// –°–æ–∑–¥–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é $
	window.$ = function (selector) {
		return new SimpleJQ(selector);
	};

	// –î–æ–±–∞–≤–ª—è–µ–º –º–µ—Ç–æ–¥ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞
	$.ready = function (callback) {
		if (document.readyState !== "loading") {
			callback();
		} else {
			document.addEventListener("DOMContentLoaded", callback);
		}
	};
	// –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ jQuery-–ø–æ–¥–æ–±–Ω–æ–π –±–∏–±–ª–∏–æ—Ç–µ–∫–∏
	$.ready(() => {
		// $(".my-element")
		// 	.css("color", "blue")
		// 	.addClass("active")
		// 	.on("mouseover", () => console.log("Hovered!"))
		// 	.html("New content");
		let text = "–î–æ–±–∞–≤–∏–ª –¥–∏–≤ —Å —Å–ø–∞–Ω–æ–º –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ";
		let content = `
			<div class="block">
				<span class="span">${text}</span>
			</div>`;
		$(".my-elem")
			.html(content)
			.css("cursor", "pointer")
			.on("click", () => {
				$(".my-elem").toggle("active");
			});
	});
}
// ‚Å°‚Å¢‚Å£‚Å£EVENT LOOP‚Å°
{
	// ‚Å°‚Å£‚Å¢‚Å¢–ü–û–†–Ø–î–û–ö –í–´–ü–û–õ–ù–ï–ù–ò–Ø‚Å°
	{
		var a = 5; // a = 5 -- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
		// üëá –§—É–Ω–∫—Ü–∏—è –≤–Ω—É—Ç—Ä–∏ setTimeout –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ –æ—á–µ—Ä–µ–¥—å –º–∞–∫—Ä–æ–∑–∞–¥–∞—á (task queue) –∏ –±—É–¥–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∞ –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –≤—Å–µ–≥–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞ –∏ –º–∏–∫—Ä–æ–∑–∞–¥–∞—á (–Ω–∞–ø—Ä–∏–º–µ—Ä, –ø—Ä–æ–º–∏—Å–æ–≤).
		setTimeout(function () {
			console.log(a); // "–ß–µ—Ç–≤—ë—Ä—Ç—ã–π –≤—ã–≤–æ–¥" a = 15 ‚Üí **15**
			a = 10; // a = 10 (–Ω–æ —ç—Ç–æ –∑–Ω–∞—á–µ–Ω–∏–µ —É–∂–µ –Ω–µ –≤—ã–≤–æ–¥–∏—Ç—Å—è).
		}, 0);
		// üëá –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–º–∏—Å–∞
		var p = new Promise(function (resolve, reject) {
			console.log(a); //"–ü–µ—Ä–≤—ã–π –≤—ã–≤–æ–¥" –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥! –í—ã–≤–æ–¥–∏—Ç —Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ a = 5 ‚Üí **5**
			a = 25; // a = 25 -- –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π 25
			resolve();
		});
		// üëá –ö–æ–ª–ª–±—ç–∫ –≤ .then() –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –æ—á–µ—Ä–µ–¥—å –º–∏–∫—Ä–æ–∑–∞–¥–∞—á (microtask queue) –∏ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Å—Ä–∞–∑—É –ø–æ—Å–ª–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –∫–æ–¥–∞, –Ω–æ –¥–æ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –º–∞–∫—Ä–æ–∑–∞–¥–∞—á (–≤–∫–ª—é—á–∞—è setTimeout).
		p.then(function () {
			a = 15; // a = 15 -- –ø—Ä–∏—Å–≤–æ–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π 15
			console.log(a); // "–¢—Ä–µ—Ç–∏–π –≤—ã–≤–æ–¥" ‚Üí **15**
		});
		console.log(a); //"–í—Ç–æ—Ä–æ–π –≤—ã–≤–æ–¥" –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥! a —É–∂–µ —Ä–∞–≤–Ω–æ 25 ‚Üí **25**
	}
	{
		console.log(1); // —ç—Ç–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤, –¥–æ–ª–∂–µ–Ω –≤—ã–≤–µ—Å—Ç–∏—Å—å –ø–µ—Ä–≤—ã–º.
		setTimeout(() => console.log(2)); // —Ç–∞–π–º–µ—Ä —Å –Ω—É–ª–µ–≤–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π. –î–æ–±–∞–≤–∏—Ç –∫–æ–ª–±—ç–∫ –≤ –æ—á–µ—Ä–µ–¥—å –º–∞–∫—Ä–æ–∑–∞–¥–∞—á.
		Promise.resolve().then(() => console.log(3)); // –ø—Ä–æ–º–∏—Å —Å—Ä–∞–∑—É —Ä–µ–∑–æ–ª–≤–∏—Ç—Å—è, –µ–≥–æ then –ø–æ–ø–∞–¥–∞–µ—Ç –≤ –æ—á–µ—Ä–µ–¥—å –º–∏–∫—Ä–æ–∑–∞–¥–∞—á.
		Promise.resolve().then(() => setTimeout(() => console.log(4))); // –∞–Ω–∞–ª–æ–≥–∏—á–Ω–æ, then –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, –∏ –≤–Ω—É—Ç—Ä–∏ –Ω–µ–≥–æ –≤—ã–∑–æ–≤ setTimeout, –∫–æ—Ç–æ—Ä—ã–π –¥–æ–±–∞–≤–∏—Ç –∫–æ–ª–±—ç–∫ console.log(4) –≤ –º–∞–∫—Ä–æ–∑–∞–¥–∞—á–∏, –Ω–æ –ø–æ–∑–∂–µ.
		Promise.resolve()
			.then(() => console.log(5))
			.then(() => console.log(6)); // –° –Ω–∞—á–∞–ª–∞ 5 –ø–æ—Ç–æ–º 6 –ö–∞–∂–¥—ã–π then –¥–æ–±–∞–≤–ª—è–µ—Ç—Å—è –≤ –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∏.
		setTimeout(() => console.log(7)); // 7 –µ—â–µ –æ–¥–∏–Ω —Ç–∞–π–º–µ—Ä, –∫–æ–ª–±—ç–∫ –≤ –º–∞–∫—Ä–æ–∑–∞–¥–∞—á–∏.
		console.log(8); // —ç—Ç–æ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤, –¥–æ–ª–∂–µ–Ω –≤—ã–≤–µ—Å—Ç–∏—Å—å –≤—Ç–æ—Ä—ã–º.

		// ‚Å°‚Å£‚Å£‚Å¢1. –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–µ –≤—ã–∑–æ–≤—ã:‚Å°
		// ‚Å°‚Å£‚Å¢‚Å°‚Å£‚Å¢‚Å¢-- console.log(1) ‚Üí 1.‚Å°
		// ‚Å°‚Å£‚Å¢‚Å¢-- console.log(8) ‚Üí 2.‚Å°
		// ‚Å°‚Å£‚Å£‚Å¢2. –ú–∏–∫—Ä–æ–∑–∞–¥–∞—á–∏ (Promise.then):‚Å°
		// ‚Å°‚Å£‚Å¢‚Å¢-- –ü–µ—Ä–≤—ã–π then: console.log(3) ‚Üí 3.‚Å°
		// ‚Å°‚Å£‚Å¢‚Å¢-- –í—Ç–æ—Ä–æ–π then: setTimeout(4) (–¥–æ–±–∞–≤–ª—è–µ—Ç 4 –≤ –º–∞–∫—Ä–æ–∑–∞–¥–∞—á–∏).‚Å°
		// ‚Å°‚Å£‚Å¢‚Å¢-- –¢—Ä–µ—Ç–∏–π then: console.log(5) ‚Üí 5 ‚Üí –ø–æ—Å–ª–µ —ç—Ç–æ–≥–æ —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π then —Å console.log(6)‚Å°
		// ‚Å°‚Å£‚Å¢‚Å¢-- –ß–µ—Ç–≤–µ—Ä—Ç—ã–π then: console.log(6) ‚Üí 6.‚Å°
		// ‚Å°‚Å£‚Å£‚Å¢3. –ú–∞–∫—Ä–æ–∑–∞–¥–∞—á–∏ (setTimeout):‚Å°
		// ‚Å°‚Å£‚Å¢‚Å¢-- –û—á–µ—Ä–µ–¥—å: 2 ‚Üí 7 ‚Üí 4(–¥–æ–±–∞–≤–ª–µ–Ω –≤–æ –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –º–∏–∫—Ä–æ–∑–∞–¥–∞—á).‚Å°
		// ‚Å°‚Å£‚Å¢‚Å¢-- –í—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –ø–æ –ø–æ—Ä—è–¥–∫—É: 2 ‚Üí 7 ‚Üí 4.‚Å°

		//! Output: 1, 8, 3, 5, 6, 2, 7, 4
	}
	{
		console.log("1"); // 1 —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥
		Promise.resolve()
			.then(() => console.log("2")) // 3 –ø—Ä–æ–º–∏—Å –≤ —Å—Ç–µ–∫–µ
			.then(() => console.log("3")) // 5 –ø—Ä–æ–º–∏—Å –≤ —Å—Ç–µ–∫–µ
			.then(() => console.log("13")) // 7 –ø—Ä–æ–º–∏—Å –≤ —Å—Ç–µ–∫–µ
			.finally(() => console.log("4")) // 9 –ø—Ä–æ–º–∏—Å –≤ —Å—Ç–µ–∫–µ
			.then(() => console.log("14")); // 11 –ø—Ä–æ–º–∏—Å –≤ —Å—Ç–µ–∫–µ

		queueMicrotask(() => console.log("5")); // 4 –º–∏–∫—Ä–æ—Ç–∞—Å–∫–∞

		Promise.reject()
			.then(() => console.log("8")) // –ù–µ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è, —Ç–∞–∫ –∫–∞–∫ –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è catch
			.catch(() => console.log("9")) // 6 –ø—Ä–æ–º–∏—Å –≤ —Å—Ç–µ–∫–µ
			.then(() => console.log("10")) // 8 –ø—Ä–æ–º–∏—Å –≤ —Å—Ç–µ–∫–µ
			.finally(() => console.log("11")); // 10 –ø—Ä–æ–º–∏—Å –≤ —Å—Ç–µ–∫–µ

		console.log("12"); // 2 —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –∫–æ–¥
		//! Output: 1 12 2 5 3 9 13 10 4 11 14
	}
	// ‚Å°‚Å£‚Å¢‚Å¢–í–õ–ò–Ø–ù–ò–ï –ù–ê EVENT LOOP‚Å°
	{
		// üëá –ë—Ä–∞—É–∑–µ—Ä –Ω–µ –∑–∞–≤–∏—Å–Ω–µ—Ç, –Ω–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –º–æ–∂–µ—Ç —Å—Ç–∞—Ç—å –Ω–µ–æ—Ç–∑—ã–≤—á–∏–≤—ã–º.
		// üëá –ú–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏ –µ—Å—Ç—å –∑–∞–¥–µ—Ä–∂–∫–∞ (–º–∏–Ω–∏–º—É–º 4 –º—Å –≤ –±—Ä–∞—É–∑–µ—Ä–∞—Ö, –¥–∞–∂–µ –µ—Å–ª–∏ —É–∫–∞–∑–∞–Ω 0), —Ç–∞–∫ –∫–∞–∫ setTimeout –∏–º–µ–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —Ç–∞–π–º–µ—Ä.
		// üëá CPU-–Ω–∞–≥—Ä—É–∑–∫–∞ –Ω–∏–∑–∫–∞—è, —Ç–∞–∫ –∫–∞–∫ –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏ Event Loop —É—Å–ø–µ–≤–∞–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –¥—Ä—É–≥–∏–µ –∑–∞–¥–∞—á–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–ª–∏–∫–∏, –∞–Ω–∏–º–∞—Ü–∏–∏).
		function inf() {
			return setTimeout(inf, 0);
		}
		// üëá –ë—Ä–∞—É–∑–µ—Ä –∑–∞–≤–∏—Å–Ω–µ—Ç (–∏–ª–∏ –≤–∫–ª–∞–¥–∫–∞ —Å—Ç–∞–Ω–µ—Ç –Ω–µ–æ—Ç–∑—ã–≤—á–∏–≤–æ–π), —Ç–∞–∫ –∫–∞–∫ –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∏ –≤—ã–ø–æ–ª–Ω—è—é—Ç—Å—è –≤ –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ–º —Ü–∏–∫–ª–µ –±–µ–∑ –ø–∞—É–∑.
		// üëá CPU-–Ω–∞–≥—Ä—É–∑–∫–∞ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è, —Ç–∞–∫ –∫–∞–∫ –Ω–µ—Ç –∑–∞–¥–µ—Ä–∂–µ–∫ –º–µ–∂–¥—É –≤—ã–∑–æ–≤–∞–º–∏.
		// üëá –ù–∏–∫–∞–∫–∏–µ –¥—Ä—É–≥–∏–µ –∑–∞–¥–∞—á–∏ (—Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥, —Å–µ—Ç–µ–≤—ã–µ –∑–∞–ø—Ä–æ—Å—ã) –Ω–µ –≤—ã–ø–æ–ª–Ω—è—Ç—Å—è, –ø–æ—Ç–æ–º—É —á—Ç–æ Event Loop –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –∑–∞–Ω—è—Ç –º–∏–∫—Ä–æ–∑–∞–¥–∞—á–∞–º–∏.
		function inf1() {
			return Promise.resolve().then(inf);
		}
	}
}
// ‚Å°‚Å¢‚Å£‚Å£–ö–û–õ–ë–ï–ö–ò(CALLBACK)‚Å°
{
	// –ü–µ—Ä–≤—ã–π –∫–æ–ª–±–µ–∫
	function getFechUser(callback) {
		setTimeout(() => {
			const user = {
				name: "–ò–≤–∞–Ω",
				age: 25,
				city: "–ú–æ—Å–∫–≤–∞",
			};
			callback(user);
		}, 2000);
	}
	// –í—Ç–æ—Ä–æ–π –∫–æ–ª–±–µ–∫
	function getJobUser(user, callback) {
		setTimeout(() => {
			const job = {
				name: "–ò–≤–∞–Ω",
				job: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç",
				salary: 1000,
			};
			callback(job);
		}, 2000);
	}
	// –§—É–Ω–∫—Ü–∏—è –æ–±—ë—Ä—Ç–∫–∞ –¥–ª—è –∫–æ–ª–±–µ–∫–æ–≤
	function run() {
		getFechUser((userInfo) => {
			console.log(userInfo);
			getJobUser(userInfo, (job) => {
				console.log(job);
				console.log(
					`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userInfo.name} –∏–∑ ${userInfo.city} —Ä–∞–±–æ—Ç–∞–µ—Ç ${job.job} –∏ –ø–æ–ª—É—á–∞–µ—Ç ${job.salary}`,
				);
			});
		});
	}
	run()
}
// ‚Å°‚Å¢‚Å£‚Å£–ü–†–û–ú–ò–°–´‚Å°
{
    // ‚Å°‚Å£‚Å£‚Å¢–ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–æ–º–∏—Å—ã c –∏–º–º–∏—Ç–∞—Ü–∏–µ–π –∑–∞–ø—Ä–æ—Å–∞ —á–µ—Ä–µ–∑ setTimeout‚Å°
    {
        function fetchUserData() {
			return new Promise((resolve, reject) => {
				setTimeout(() => {
					const user = {
						name: "–ò–≤–∞–Ω",
						age: 25,
						city: "–ú–æ—Å–∫–≤–∞",
					};
					if (user instanceof Object) {
						resolve(user);
					} else {
						reject("–û—à–∏–±–∫–∞: –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω");
					}
				}, 1000);
			});
		}
		function fetchJob(user) {
			return new Promise((resolve, reject) => {
				setTimeout(() => {
					const job = {
						job: "–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç",
						salary: 1000,
					};
					if (job instanceof Object) {
						resolve([user, job]);
					} else {
						reject("–û—à–∏–±–∫–∞: —Ä–∞–±–æ—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞");
					}
				}, 1000);
			});
		}
		fetchUserData()
			.then((userData) => {
				// console.log(userData); // {name: '–ò–≤–∞–Ω', age: 25, city: '–ú–æ—Å–∫–≤–∞'}
				return fetchJob(userData);
			})
			.then((job) => {
				console.log(job);
				[
					// 0: {name: '–ò–≤–∞–Ω', age: 25, city: '–ú–æ—Å–∫–≤–∞'}
					// 1: { job: '–ü—Ä–æ–≥—Ä–∞–º–º–∏—Å—Ç', salary: 1000 }
				];
			});
    }
	// ‚Å°‚Å£‚Å£‚Å°‚Å£‚Å£‚Å¢–†–∞–±–æ—Ç–∞ —Å –ø—Ä–æ–º–∏—Å–∞–º–∏‚Å°
	{
		function sleep(ms) {
			return new Promise((resolve) => setTimeout(() => resolve(ms), ms));
		}
		let a = sleep(2000);
		console.log(a); // Promise { <pending> } –û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
		a.then(() => console.log("2 —Å–µ–∫—É–Ω–¥—ã —Å–ø—É—Å—Ç—è"));
		sleep(1000)
			.then((res) => console.log(res))
			.then((res) => {
				console.log(res);
				return sleep(500);
			})
			.then((res) => console.log(res));
		// –í –¥–∞–Ω–Ω–æ–º —Å–ª—É—á–∞–µ:
		// –ü–µ—Ä–≤—ã–π .then –≤—ã–≤–æ–¥–∏—Ç 1000 (–∑–Ω–∞—á–µ–Ω–∏–µ –∏–∑ sleep(1000)).
		// –í—Ç–æ—Ä–æ–π .then –ø–æ–ª—É—á–∞–µ—Ç undefined (–ø–æ—Ç–æ–º—É —á—Ç–æ console.log –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç).
		// –¢—Ä–µ—Ç–∏–π .then –ø–æ–ª—É—á–∞–µ—Ç 500 (–ø–æ—Ç–æ–º—É —á—Ç–æ –ø–µ—Ä–µ–¥ –Ω–∏–º –±—ã–ª return sleep(500)).
		1000;
		undefined;
		500;
	}
	// ‚Å°‚Å£‚Å£‚Å¢–ù–∞–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏, –≤–æ–∑–≤—Ä–∞—â–∞—é—â–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é —Ñ—É–Ω–∫—Ü–∏—é‚Å°
	{
		/*
		 * –ù–µ–æ–±—Ö–æ–¥–∏–º–æ –Ω–∞–ø–∏—Å–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –¥–≤–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞ - –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É—é
		 * —Ñ—É–Ω–∫—Ü–∏—é –∏ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –ª–∏–º–∏—Ç –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö. –§—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –Ω–æ–≤—É—é
		 * –≤–µ—Ä—Å–∏—é –∞—Å—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏, –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–π –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–º –ª–∏–º–∏—Ç–æ–º.
		 * –î–æ–ª–∂–Ω—ã –≤—ã–ø–æ–ª–Ω—è—Ç—å—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —É—Å–ª–æ–≤–∏—è:
		 * - –ï—Å–ª–∏ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –º–µ–Ω—å—à–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞, —Ç–æ –Ω–æ–≤–∞—è
		 * —Ñ—É–Ω–∫—Ü–∏—è –¥–æ–ª–∂–Ω–∞ –≤–µ—Ä–Ω—É—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏.
		 * - –ï—Å–ª–∏ –≤—Ä–µ–º—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏—Å—Ö–æ–¥–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ –±–æ–ª—å—à–µ –≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –ª–∏–º–∏—Ç–∞, —Ç–æ –Ω–æ–≤–∞—è
		 * —Ñ—É–Ω–∫—Ü–∏—è –≤–µ—Ä–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ "–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è"
		 */
		const fu = async (n) => {
			await new Promise((res) => setTimeout(res, 100));
			return n * n;
		};
		asyncClient(fu, 50)(5); // rejectted: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è
		asyncClient(fu, 150)(5); // resolved: 25
		asyncClient(fu, 150)(5).then((res) => console.log(res));

		const fu2 = async (a, b) => {
			await new Promise((res) => setTimeout(res, 120));
			return a + b;
		};

		asyncClient(fu2, 100)(1, 2); // rejectted: –ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è
		asyncClient(fu2, 150)(1, 2); // resolved: 3
		asyncClient(fu2, 150)(1, 2).then((res) => console.log(res));

		// üëá –†–µ–∞–ª–∏–∑–∞—Ü–∏—è —Ñ—É–Ω–∫—Ü–∏–∏
		function asyncClient(fu, timeLimit) {
			return async (...args) => {
				return Promise.race([
					fu(...args),
					new Promise((_, reject) =>
						setTimeout(() => reject("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤—Ä–µ–º–µ–Ω–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è"), timeLimit),
					),
				]);
			};
		}
	}
	// ‚Å°‚Å£‚Å£‚Å¢–°–≤–æ—è —Ñ—É–Ω–∫—Ü–∏—è Promise.all‚Å°
	{
		function promiseAll(promises) {
			return new Promise((resolve, reject) => {
				const results = [];
				let completedCount = 0;
				// –ï—Å–ª–∏ –º–∞—Å—Å–∏–≤ –ø—É—Å—Ç, —Å—Ä–∞–∑—É —Ä–µ–∑–æ–ª–≤–∏–º—Å—è
				if (promises.length === 0) {
					resolve(results);
					return;
				}
				promises.forEach((promise, index) => {
					// –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º –≤ Promise.resolve(), —á—Ç–æ–±—ã —Ä–∞–±–æ—Ç–∞—Ç—å —Å –Ω–µ-–ø—Ä–æ–º–∏—Å–∞–º–∏
					Promise.resolve(promise)
						.then((result) => {
							results[index] = result; // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π –ø–æ–∑–∏—Ü–∏–∏
							completedCount++;
							// –ï—Å–ª–∏ –≤—Å–µ –ø—Ä–æ–º–∏—Å—ã –≤—ã–ø–æ–ª–Ω–µ–Ω—ã, —Ä–µ–∑–æ–ª–≤–∏–º—Å—è
							if (completedCount === promises.length) {
								resolve(results);
							}
						})
						.catch(reject); // –ï—Å–ª–∏ –ª—é–±–æ–π –ø—Ä–æ–º–∏—Å —É–ø–∞–ª, —Ä–µ–¥–∂–µ–∫—Ç–∏–º –≤–µ—Å—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç
				});
			});
		}
	}
}
// ‚Å°‚Å¢‚Å£‚Å£–ó–ê–î–ê–ß–ò –ù–ê –ê–õ–ì–û–†–ò–¢–ú–´‚Å°
{
	// ‚Å°‚Å£‚Å£‚Å°‚Å£‚Å£‚Å¢–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–∞—Ä–Ω–æ—Å—Ç–∏ —Ä–∞–∑–Ω—ã—Ö —Å–∫–æ–±–æ–∫ –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º —Å—Ç–µ–∫–∞‚Å°
	{
		function checkedBrackets(str) {
			// –°–æ–∑–¥–∞–µ–º —Å—Ç–µ–∫ –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫
			const stack = [];
			// –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –æ—Ç–∫—Ä—ã–≤–∞—é—â–∏—Ö –∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫
			const bracketsMap = {
				"(": ")",
				"[": "]",
				"{": "}",
			};
			// –°–æ–∑–¥–∞–µ–º –Ω–∞–±–æ—Ä –∑–∞–∫—Ä—ã–≤–∞—é—â–∏—Ö —Å–∫–æ–±–æ–∫ –¥–ª—è –±—ã—Å—Ç—Ä–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏
			const closingBrackets = new Set(Object.values(bracketsMap));
			// –ü—Ä–æ—Ö–æ–¥–∏–º –ø–æ –∫–∞–∂–¥–æ–º—É —Å–∏–º–≤–æ–ª—É –≤ —Å—Ç—Ä–æ–∫–µ
			for (const cur of str) {
				// –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª - –æ—Ç–∫—Ä—ã–≤–∞—é—â–∞—è —Å–∫–æ–±–∫–∞, –¥–æ–±–∞–≤–ª—è–µ–º –µ–µ –≤ —Å—Ç–µ–∫
				if (bracketsMap[cur]) {
					stack.push(cur);
				}
				// –ï—Å–ª–∏ —Å–∏–º–≤–æ–ª - –∑–∞–∫—Ä—ã–≤–∞—é—â–∞—è —Å–∫–æ–±–∫–∞
				else if (closingBrackets.has(cur)) {
					// –ò–∑–≤–ª–µ–∫–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω—é—é –æ—Ç–∫—Ä—ã–≤–∞—é—â—É—é —Å–∫–æ–±–∫—É –∏–∑ —Å—Ç–µ–∫–∞
					const lastOpenBracket = stack.pop();

					// –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ –∑–∞–∫—Ä—ã–≤–∞—é—â–∞—è —Å–∫–æ–±–∫–∞ –ø–æ—Å–ª–µ–¥–Ω–µ–π –æ—Ç–∫—Ä—ã–≤–∞—é—â–µ–π
					if (bracketsMap[lastOpenBracket] !== cur) {
						return false; // –ï—Å–ª–∏ –Ω–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç, —Å–∫–æ–±–∫–∏ –Ω–µ—Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã
					}
				}
			}
			// –ï—Å–ª–∏ —Å—Ç–µ–∫ –ø—É—Å—Ç, –≤—Å–µ —Å–∫–æ–±–∫–∏ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω—ã
			return stack.length === 0;
		}
		checkedBrackets("()");
	}
}