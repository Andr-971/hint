
// 🔳 ⁡⁢⁣⁣ВСТРОЕННЫЕ ФУНКЦИИ⁡
{
	setTimeout(); //* Позволяет установить таймер, после отсчёта которого будет выполнена заданная функция. Задержка задаётся в миллисекундах. Например, чтобы отсрочить выполнение кода на 1 секунду, нужно написать 1000, на минуту — 60000. Отменить вызов можно с помощью функции clearTimeout().
	let timerId_01 = setTimeout(func | code, [delay], [arg1], [arg2]);
	function sayHi(phrase, who) {
		alert(phrase + ", " + who);
	}
	// Передаём ссылку на функцию и аргументы функции
	setTimeout(sayHi, 1000, "Привет", "Андрей!"); // Привет, Андрей!
	// Отмена фуункции
	let timerId_02 = setTimeout(callback);
	clearTimeout(timerId);
	//-------------------------------------
	setInterval(); //* Аналогична setTimeout(), но вместо однократного выполнения кода через заданный интервал времени, выполняет его регулярно через равные промежутки времени. Например, используется для задержки функций, которые будут выполняться снова и снова, например анимации. Для остановки выполнения setInterval() необходима функция clearInterval().
	let timerId_03 = setInterval(func | code, [delay], [arg1], [arg2]);
	// повторить с интервалом 2 секунды
	let timerId_04 = setInterval(() => alert("tick"), 2000);
	// остановить вывод через 5 секунд
	setTimeout(() => {
		clearInterval(timerId);
		alert("stop");
	}, 5000);
}