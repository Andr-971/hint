
//* Создание файла json
//* npm init -y -создание package.json
//* npm install - инициализация package.json
// 🔳 ⁡⁢⁣⁣СЕМАНТИЧЕСКОЕ ВЕРСИОНИРОВАНИЕ (SemVer)⁡
{
    // ⭐ ⁡⁣⁣⁢Семантическое версионирование (SemVer) — стандарт нумерации версий ПО, который помогает разработчикам управлять зависимостями и понимать характер изменений в пакетах. В JavaScript он активно используется в npm-пакетах.⁡
    // 🔹 ⁡⁣⁢⁢ДЛЯ ЧЕГО ПРИМЕНЯЕТСЯ?⁡
    {
        // ✅ ⁡⁢⁢⁢Управление зависимостями: Автоматическое разрешение совместимых версий.⁡
        // ✅ ⁡⁢⁢⁢Понятные изменения: Определение типа изменений (фича, багфикс, ломающее изменение).⁡
        // ✅ ⁡⁢⁢⁢Предсказуемость: Разработчики знают, чего ожидать от обновления.⁡
        // ✅ ⁡⁢⁢⁢Избежание "dependency hell": Минимизация конфликтов между пакетами.⁡
    }
    // 🔹 ⁡⁣⁢⁢СТРУКТУРА ВЕРСИИ⁡
    {
        // ⚡ ⁡⁢⁣⁣Версия имеет формат: MAJOR.MINOR.PATCH⁡
        // ✅ ⁡⁢⁢⁢MAJOR (1.0.0) — обратно несовместимые изменения.⁡
        // ✅ ⁡⁢⁢⁢MINOR (0.1.0) — новая функциональность без нарушения совместимости.⁡
        // ✅ ⁡⁢⁢⁢PATCH (0.0.1) — исправления ошибок, совместимые с предыдущими версиями.⁡
    }
    // 🔹 ⁡⁣⁢⁢КАК ИСПОЛЬЗУЕТСЯ В JAVASCRIPT (NPM)?⁡
    {
        // ⚡ ⁡⁢⁣⁣В package.json версии указываются с модификаторами:⁡
        // ✅ ⁡⁢⁢⁢Фиксированная версия:⁡
        {
            // "dependencies": {
            // "lodash": "4.17.21"
            // }
            // Разрешена только указанная версия.
        }
        // ✅ ⁡⁢⁢⁢Диапазоны версий:⁡
        {
            // ⚪ ⁡⁣⁣⁢^4.17.0: Обновления MINOR и PATCH (4.x.x, где x ≥ 17).⁡
            // ⚪ ⁡⁣⁣⁢~4.17.0: Только PATCH (4.17.x).⁡
            // ⚪ ⁡⁣⁣⁢>4.0.0 <5.0.0: Любая версия 4.x.x.⁡
            // ⚪ ⁡⁣⁣⁢*: Любая версия (не рекомендуется).⁡
        }
    }
    // 🔹 ⁡⁣⁢⁢ПРАВИЛА ПУБЛИКАЦИИ ПАКЕТОВ⁡
    {
        // ✅ ⁡⁢⁢⁢Начинайте с 0.1.0 для начальной разработки.⁡
        // ✅ ⁡⁢⁢⁢Увеличивайте MAJOR при ломающих изменениях.⁡
        // ✅ ⁡⁢⁢⁢Увеличивайте MINOR при добавлении совместимых фич.⁡
        // ✅ ⁡⁢⁢⁢Увеличивайте PATCH для совместимых багфиксов.⁡
    }
    // 🔹 ⁡⁣⁢⁢ПРИМЕРЫ ИСПОЛЬЗОВАНИЯ⁡
    {
        // {
        // 	"dependencies": {
        // 		"express": "^4.18.2", // Обновлять до 4.x.x
        // 		"typescript": "~5.0.4", // Только 5.0.x
        // 		"rxjs": "7.8.0" // Точная версия
        // 	}
        // }
    }
    // 🔹 ⁡⁣⁢⁢НЮАНСЫ И СОВЕТЫ⁡
    {
        // ✅ ⁡⁢⁢⁢Не все следуют SemVer: Некоторые пакеты нарушают правила (например, eslint-plugin-import).⁡
        // ✅ ⁡⁢⁢⁢Локер версий: Используйте package-lock.json или yarn.lock для фиксации версий.⁡
        // ✅ ⁡⁢⁢⁢Автоматические обновления:⁡
        {
            // ⚪ ⁡⁣⁣⁢npm outdated — проверка устаревших пакетов.⁡
            // ⚪ ⁡⁣⁣⁢npm update — безопасное обновление (в рамках ^ и ~).⁡
        }
        // ✅ ⁡⁢⁢⁢Критические пакеты: Для важных зависимостей (например, react) фиксируйте версию точно (4.17.21).⁡
        // ✅ ⁡⁢⁢⁢Pre-release: Тестируйте бета-версии осторожно, они могут содержать баги.⁡
        // ✅ ⁡⁢⁢⁢Альтернативы: Некоторые используют Calendar Versioning (CalVer) (например, Ubuntu 22.04).⁡
        // ✅ ⁡⁢⁢⁢Откатите версию в package.json(изменить версию, удалить node_modules) и запустите:⁡
        {
            // npm install
        }
    }
}